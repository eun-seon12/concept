#AWS
  AWS란?
    AWS는(Amazon Web Services) 아마존이 제공하는 클라우드 컴퓨팅 서비스 플랫폼으로 인터넷을 통해 서버, 저장소, 데이터베이스, AI 등의 IT 인프라를 빌려 쓸 수 있는 서비스이다.
    AWS에서 제공하는 주요 서비스에는 EC2, S3, RDS, Route 53등이 있다.
    AWS는 서버 등의 자원을 필요한 만큼 사용할 수 있다는 유연성과 아마존의 글로벌 인프라를 기반으로 하기에 높은 보안 수준의 보안성이 큰 장점이다.
    실제로 웹 개발자들은 S3에 정적 웹사이트를 배포하고 EC2에 백엔드 서버를 운영한다.
#DOCKER
  docker란?
    컨테이너(container)라고 부르는 운영체제 수준의 가상화 방식으로 소프트웨어를 배포하는 방식을 사용하는 PaaS 제품을 말한다.
    PaaS는 Platform as a Service의 약자로 애플리케이션, 데이터 단계만 사용자가 책임지고 관리하는 서비스를 말한다.
    쉽게 말해 도커를 사용하여 다양한 개발 및 운영 환경에서 각종 소프트웨어를 편하게 배포할 수 있다.
  docker component
    도커의 기본 구성 요소로는 도커 데몬과 도커 클라이언트가 있다.
    도커 데몬은 도커의 서버 역할을 하며 컨테이너, 이미지, 네트워크와 같은 객체들을 생성하고 관리하는 api 요청을 처리한다.
    도커 클라이언트는 도커와 상호작용하는 사용자 인터페이스다.
  docker 기본 명령어
    - docker login : 로그인
    - docker pull 이미지 이름 : 도커 허브에 있는 이미지를 로컬에 다운로드

    *하나의 이미지로 여러 개의 컨테이너를 만들 수 있음

    - docker run hello-world(이미지 이름) : 다운로드 된 이미지를 컨테이너 생성하여 실행(로컬에 다운로드 된 이미지가 없을 경우 자동으로 도커 허브에서 자동 다운로드)
    - docker ps : 현재 실행중인 컨테이너 조회
    - docker ps -a : 모든 컨테이너 조회 (종료된 것 포함)
    - docker run —name 이름 이미지 이름 : 랜덤 이름이 아닌 지정한 이름 < 구별하기 편함 ex) spring boot1
    
    - docker rm 컨테이너 이름 : 컨테이너 삭제
    - docker rmi 이미지 이름 : 이미지 삭제
